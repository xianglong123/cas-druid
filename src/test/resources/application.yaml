druid:
  password: t3k1+w/mOlHCGdOnAd3xow==
server:
  port: 8086
spring:
  main:
    # 如果有两个重复的bean被加载到容器内，允许第二个覆盖第一个，默认false
    allow-bean-definition-overriding: true
  datasource:
    master:
      username: root
      password: 12345678
      url: jdbc:mysql://localhost:3306/cas?useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
      driver-class-name: com.mysql.cj.jdbc.Driver
    slave:
      username: root
      password: 12345678
      url: jdbc:mysql://localhost:3306/cas?useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
      driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # 初始化连接池的连接数量，大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次校验，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 是否缓存preparedStatement,也就是PSCache 官方建议MYSQL下建议关闭，个人建议如果想用SQL防火墙，建议打开
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      # 通过connectProperties属性来打开mergeSql功能，慢SQL记录
      connect-properties:
        druid.stat.mergeSql: true;druid.stat.slowSqlMillis=5000
        publicKey: GOURD-HXNLYW-201314
        password: ${druid.password}
      # WebStatFilter配置，说明请参考Druid Wiki,配置WebStatFilter
      # 是否启用StatFilter默认值true
      web-stat-filter:
        enabled: true
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.css,*.ico,/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: 123456
        # ip白名单(没有配置为空,则允许所有访问)
#        allow: 127.0.0.1
#        deny: 127.0.0.1

      # spring监控，对内部各接口调用的监控
      aop-patterns: com.cas.*
      # 监控页面访问地址：http://localhost:8085/druid/
      password-callback-class-name: com.cas.config.DbPasswordCallback
  redis:
    timeout: 2000
    host: 127.0.0.1
    port: 6379
    database: 0
  rabbitmq:
    host: 127.0.0.1 # 用户名
    port: 5672      # port
    username: guest # 用户名
    password: guest # 密码
    virtual-host: / # 指定连接到broker的Virtual host.
    # NONE值是禁用发布确认模式，是默认值
    # CORRELATED值是发布消息成功到交换器后会触发回调方法，如1示例
    # SIMPLE值经测试有两种效果，其一效果和CORRELATED值一样会触发回调方法，其二在发布消息成功后使用rabbitTemplate调用waitForConfirms或waitForConfirmsOrDie方法等待broker节点返回发送结果，根据返回结果来判定下一步的逻辑，要注意的点是waitForConfirmsOrDie方法如果返回false则会关闭channel，则接下来无法发送消息到broker;
    publisher-confirm-type: none # 发布确认属性配置
    # publisher-confirms: true # springboot版本低用下面这个，版本高用上面这个
    publisher-returns: false # 确认消息已发送到队列(Queue) 开启发送失败退回
    dynamic: false # 是否创建AmqpAdmin bean. 默认为: true)
    addresses: # 指定client连接到的server的地址，多个以逗号分隔.
    connection-timeout: 0 # 连接超时时间，单位毫秒，0表示永不超时
    listener:
      simple:
        retry:
          enabled: true # 开启消费者进行重试
          max-attempts: 5 # 最大重试次数
          initial-interval: 3000 # 重试时间间隔
  aop:
    proxy-target-class: true
    auto: true
mybatis:
  #配置mapper xml文件所在的路径
  mapper-locations: classpath:mapper/*Mapper.xml
  #Mybais 扫描别名包， 和注解@Alias联用
  type-aliases-package: com.cas.bean
  #  配置typeHandler 的扫描包
  type-handlers-package: com.cas.config.typeHandler
  configuration:
    map-underscore-to-camel-case: true
    # 三种执行模式，simple,reuse,batch
    default-executor-type: reuse
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    interceptors:
#      - com.cas.config.interceptor.MybatisInterceptor
    object-factory: com.cas.config.factory.MyObjectFactory

logging:
  config: classpath:logback-spring.xml